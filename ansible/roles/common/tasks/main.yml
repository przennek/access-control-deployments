---
- name: Update apt-get repo and cache
  apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

- name: Upgrade all apt packages
  apt: upgrade=dist force_apt_get=yes

- name: Install pulseaudio
  ansible.builtin.apt:
    name: pulseaudio
    state: present

- name: Install pulseaudio bluetooth
  ansible.builtin.apt:
    name: pulseaudio-module-bluetooth
    state: present

- name: Install vim
  ansible.builtin.apt:
    name: vim
    state: present

- name: Install pip
  ansible.builtin.apt:
    name: python3-pip
    state: present

- name: Install expect
  ansible.builtin.apt:
    name: expect
    state: present

- name: Install docker packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
  tags:
    - docker

- name: Add Docker official GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  tags:
    - docker

- name: Verify that we have the key with the fingerprint
  apt_key:
    id: 0EBFCD88
    state: present
  tags:
    - docker

- name: Set up the stable repository
  apt_repository:
    repo: deb [arch=armhf] https://download.docker.com/linux/raspbian buster stable
    state: present
  tags:
    - docker

- name: Update apt packages
  apt:
    update_cache: yes
  tags:
    - docker

- name: Install docker
  apt:
    name: docker-ce
    state: present
    update_cache: yes
  tags:
    - docker

- name: Add remote "pc" user to "docker" group
  user:
    name: "pc"
    groups: "docker"
    append: yes
  tags:
    - docker

- name: Reset every night at 03:30 AM 
  lineinfile:
    path: /var/spool/cron/crontabs/root
    line: "30 3 * * * /sbin/shutdown -r now"
    create: yes

- name: Create bin
  ansible.builtin.file:
    path: /home/pc/bin
    state: directory
    recurse: yes

- name: Install uWSGI with SSL support
  environment:
    CFLAGS: "-I/usr/local/opt/openssl/include"
    LDFLAGS: "-L/usr/local/opt/openssl/lib"
    UWSGI_PROFILE_OVERRIDE: "ssl=true"
  command: "pip install uwsgi -Iv"

- name: Install portaudio19-dev
  ansible.builtin.apt:
    name: portaudio19-dev
    state: present

- name: Install UV4L and UV4L-raspicam
  become: yes
  become_user: root
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - uv4l
    - uv4l-raspicam

- name: Install UV4L-raspicam-extras
  become: yes
  become_user: root
  apt:
    name: uv4l-raspicam-extras
    state: present

- name: Install UV4L packages
  become: yes
  become_user: root
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - uv4l-server
    - uv4l-uvc
    - uv4l-xscreen
    - uv4l-mjpegstream
    - uv4l-dummy
    - uv4l-raspidisp

- name: Install UV4L-webrtc
  become: yes
  become_user: root
  apt:
    name: uv4l-webrtc
    state: present

- name: Install UV4L-demos
  become: yes
  become_user: root
  apt:
    name: uv4l-demos
    state: present

- name: Install UV4L-xmpp-bridge
  become: yes
  become_user: root
  apt:
    name: uv4l-xmpp-bridge
    state: present

- name: Deploy asound.conf
  become: yes
  become_user: root
  copy:
    src: ../../../config/.asound
    dest: "/etc/asound.conf"

- name: Deploy .asound file
  copy:
    src: ../../../config/.asound
    dest: "/home/pc/.asound"

- name: Deploy alsa.conf file
  copy:
    src: ../../../config/alsa.conf
    dest: "/usr/share/alsa/alsa.conf"

- name: Deploy uv4l config file
  copy:
    src: ../../../config/uv4l-raspicam.conf
    dest: "/etc/uv4l/uv4l-raspicam.conf"